# darkpower

[[plugins]]
repo = 'Shougo/unite.vim'
on_event = 'VimEnter'
hook_add = '''
  let g:unite_enable_start_insert = 1
  let g:unite_source_history_yank_enable = 1
  let g:unite_source_file_mru_limit = 200
  nnoremap [unite] <Nop>
  nmap <Leader>f [unite]

  let g:unite_source_file_mru_filename_format = ''

  nnoremap <silent> [unite]f :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
  nnoremap <silent> [unite]b :<C-u>Unite buffer<CR>
  nnoremap <silent> [unite]r :<C-u>Unite -buffer-name=register register<CR>
  nnoremap <silent> [unite]m :<C-u>Unite file_mru<CR>
  nnoremap <silent> [unite]c :<C-u>Unite bookmark<CR>
  nnoremap <silent> [unite]a :<C-u>UniteBookmarkAdd<CR>

  function! s:unite_my_settings()
    nmap <buffer> <ESC> <Plug>(unite_exit)
    imap <buffer> <C-w> <Plug>(unite_delete_backward_path)
    nnoremap <silent><buffer><expr> s unite#smart_map('s', unite#do_action('split'))
    inoremap <silent><buffer><expr> s unite#smart_map('s', unite#do_action('split'))
    nnoremap <silent><buffer><expr> v unite#smart_map('v', unite#do_action('vsplit'))
    inoremap <silent><buffer><expr> v unite#smart_map('v', unite#do_action('vsplit'))
    nnoremap <silent><buffer><expr> <Tab> unite#smart_map('s', unite#do_action('tabopen'))
    inoremap <silent><buffer><expr> <Tab> unite#smart_map('s', unite#do_action('tabopen'))
    nnoremap <silent><buffer><expr> f unite#smart_map('f', unite#do_action('vimfiler'))
    inoremap <silent><buffer><expr> f unite#smart_map('f', unite#do_action('vimfiler'))
  endfunction
'''

[[plugins]]
repo = 'Shougo/neomru.vim'
on_source = ['unite.vim']

[[plugins]]
repo = 'Shougo/vimfiler.vim'
on_event = 'VimEnter'
hook_add = '''
  let g:vimfiler_as_default_explorer = 1
  let g:vimfiler_safe_mode_by_default = 0
  let g:vimfiler_enable_auto_cd = 1
  nnoremap <silent> <Leader>fe :<C-u>VimFilerBufferDir -quit<CR>
  nnoremap <silent> <Leader>fi :VimFiler -buffer-name=explorer -split -winwidth=45 -toggle -no-quit -columns=devicons<Cr>

  autocmd! FileType vimfiler call s:my_vimfiler_settings()
  function! s:my_vimfiler_settings()
    nmap     <buffer><expr><Cr> vimfiler#smart_cursor_map("\<Plug>(vimfiler_expand_tree)", "\<Plug>(vimfiler_edit_file)")
    nnoremap <silent><buffer><expr> v
          \ vimfiler#do_switch_action('vsplit')
    nnoremap <silent><buffer><expr> s
          \ vimfiler#do_switch_action('split')
    nmap <buffer> q <Plug>(vimfiler_exit)
    nmap <buffer> Q <Plug>(vimfiler_hide)
  endfunction
'''

# other

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

# completion

# neosnippet

[[plugins]]
repo = 'Shougo/neosnippet.vim'
on_event = 'InsertEnter'
depends = ['neosnippet-snippets']
hook_add = '''
  " imap <C-k>    <Plug>(neosnippet_expand_or_jump)
  " smap <C-k>    <Plug>(neosnippet_expand_or_jump)
  " xmap <C-k>    <Plug>(neosnippet_expand_target)
	let g:neosnippet#snippets_directory='~/.config/nvim/snippets' 
'''

[[plugins]]
repo = 'ncm2/ncm2-neosnippet'
on_event = 'InsertEnter'
depends  = ['neosnippet.vim', 'neosnippet-snippets']
hook_post_source = '''
	imap <expr><C-k> neosnippet#expandable() ? ncm2_neosnippet#expand_or("\<Tab>", 'n') : neosnippet#jumpable() ? "\<Plug>(neosnippet_jump)" : "\<Tab>"
	smap <expr><C-k> neosnippet#expandable() ? ncm2_neosnippet#expand_or("\<Tab>", 'n') : neosnippet#jumpable() ? "\<Plug>(neosnippet_jump)" : "\<Tab>"
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
on_event = 'InsertEnter'

[[plugins]]
repo = 'Shougo/neopairs.vim'

[[plugins]]
repo = 'lervag/vimtex'
on_ft = ['tex']
hook_add = '''
au FileType tex call ncm2#register_source({
            \ 'name' : 'vimtex',
            \ 'priority': 1,
            \ 'subscope_enable': 1,
            \ 'complete_length': 1,
            \ 'scope': ['tex'],
            \ 'matcher': {'name': 'prefix', 'key': 'word'},
            \ 'mark': 'tex',
            \ 'word_pattern': '\w+',
            \ 'complete_pattern': g:vimtex#re#ncm,
            \ 'on_complete': ['ncm2#on_complete#omni', 'vimtex#complete#omnifunc'],
            \ })
'''

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'css', 'scss', 'sass']

# R lang

[[plugins]]
repo = 'rcmdnk/vim-markdown'
on_ft = ['md', 'rmd']

[[plugins]]
repo = 'jalvesaq/Nvim-R'
on_ft = ['r', 'rmd']
hook_post_source = '''
	let g:r_indent_align_args = 0
'''

[[plugins]]
repo = 'gaalcaras/ncm-R'
depends = ['Nvim-R']
on_ft = ['r', 'rmd']

# python

[[plugins]]
repo = 'davidhalter/jedi-vim'
on_ft = ['python']
hook_add = '''
 let g:jedi#completions_enabled = 0
'''

[[plugins]]
repo = 'ncm2/ncm2-jedi'
on_ft = ['python']

# style
[[plugins]]
repo = 'ryanoasis/vim-devicons'
on_event = 'VimEnter'
depends = ['vimfiler.vim', 'unite.vim']
hook_add = '''
let g:webdevicons_enable = 1
let g:webdevicons_enable_vimfiler = 1
let g:webdevicons_enable_unite = 1
let g:webdevicons_enable_airline_statusline = 1
'''
